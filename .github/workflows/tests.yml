name: Build Google tests and run
on: { push: { paths-ignore: [ 'README.md', 'LICENSE' ] }, workflow_dispatch }
# Configuration
env:
  strDirGTest: "ThirdParty/googletest"
  # inside strDirGTest
  strDirInstallGTest: "install"
jobs:
  test-in-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Get version googleTestLatestRepo
        id: gtest-tag
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: google/googletest
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache googleTestLatestRepo
        uses: actions/cache@v3
        with:
          path: ./${{ env.strDirGTest }}
          key: cache-key-gtest-${{ steps.gtest-tag.outputs.release }}
        id: cache-gtest

      - name: Download and build googleTestLatestRepo
        if: steps.cache-gtest.outputs.cache-hit != 'true'
        run: | # bash
          git clone --depth 1 --branch ${{ steps.gtest-tag.outputs.release }} https://github.com/google/googletest.git "${{ env.strDirGTest }}"
          cd "${{ env.strDirGTest }}"
          mkdir buildDirectory
          cd buildDirectory
          cmake -DCMAKE_INSTALL_PREFIX="${{ env.strDirInstallGTest }}" ..
          make
          sudo make install

      - name: Build tests
        run: | # bash
          CMAKE_PREFIX_PATH="${{ env.strDirGTest }}/buildDirectory/${{ env.strDirInstallGTest }}" cmake -S _msvcStuff/cmake -B _msvcStuff/cmake/build -G Ninja -DMY_GTEST_INCLUDE_DIRS:STRING=${{ env.strDirGTest }}/buildDirectory/${{ env.strDirInstallGTest }} 
          ninja -C _msvcStuff/cmake/build
          
      - name: Run tests
        continue-on-error: true
        run: | # bash
          ./bin/x64/PosixfyPrimitives
