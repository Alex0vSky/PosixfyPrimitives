name: Build Google tests and run
on: { push: { paths-ignore: [ 'README.md', 'LICENSE' ] }, workflow_dispatch }
# Configuration
env:
  dirGTest: "ThirdParty/googletest"
  dirBuildGTest: "ThirdParty/googletest/build"
  dirInstallGTest: "ThirdParty/googletest/install"
# For EnricoMi/publish-unit-test-result-action@v2
permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write
jobs:
  test-in-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get version googleTestLatestRepo
        id: gtest-tag
        # uses: pozetroninc/github-action-get-latest-release@master # not support node 20 yet
        # uses: veritone/github-action-get-latest-release@master
        uses: baywet/github-action-get-latest-release@feature/node-20
        with:
          repository: google/googletest
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache googleTestLatestRepo
        uses: actions/cache@v4
        with:
          path: ./${{ env.dirGTest }}
          key: cache-key-gtest-${{ steps.gtest-tag.outputs.release }}
        id: cache-gtest

      - name: Download and build googleTestLatestRepo
        if: steps.cache-gtest.outputs.cache-hit != 'true'
        run: | # bash
          git clone --depth 1 --branch ${{ steps.gtest-tag.outputs.release }} https://github.com/google/googletest.git "${{ env.dirGTest }}"
          cmake \
          -DCMAKE_CXX_COMPILER=clang++ \
          -DCMAKE_INSTALL_PREFIX="${{ env.dirInstallGTest }}" \
          -S "${{ env.dirGTest }}" -B "${{ env.dirBuildGTest }}"
          make -C "${{ env.dirBuildGTest }}"
          sudo make -C "${{ env.dirBuildGTest }}" install

      - name: Build tests
        run: | # bash
          CMAKE_PREFIX_PATH="${{ env.dirInstallGTest }}"  \
          cmake \
          -DCMAKE_CXX_COMPILER=clang++ \
          -DMY_GTEST_INCLUDE_DIRS:STRING=${{ github.workspace }}/${{ env.dirInstallGTest }} \
          -S _msvcStuff/cmake -B _msvcStuff/cmake/build
          make -C _msvcStuff/cmake/build
          
      - name: Run tests
        run: | # bash
          ./bin/x64/PosixfyPrimitives --gtest_output=xml

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            ./*.xml
